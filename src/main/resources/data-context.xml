<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:property-placeholder location="classpath:app.properties"/>

	<!--&lt;!&ndash; 定义数据源&ndash;&gt;-->
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		  destroy-method="close">
		<property name="driverClassName" value="${database.className}" />
		<property name="url" value="${database.url}"/>
		<property name="username" value="${database.username}"/>
		<property name="password" value="${database.password}" />
		<property name="maxActive" value="1000" />
		<property name="minIdle" value="40" />

		<!-- 关闭自动提交特性 -->
		<property name="defaultAutoCommit" value="false" />
		<!-- 借连接保持时长（毫秒） -->
		<property name="maxAge" value="28800" />
		<!--<property name="maxAge" value="86400000" />-->
		<!-- 借连接时测试是否通畅 -->
		<property name="testOnBorrow" value="false"/>
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <!-- 事务拦截器需要依赖注入一个事务管理器 -->
        <property name="transactionManager" ref="transactionManager" />
        <!-- 定义事务传播属性 -->
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

	<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				 <value>*Mapper</value>
				<!--<value>*ServiceImpl</value>-->
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描目录,省掉 Configuration.xml 里的手工配置 AliasClass -->
		<property name="typeAliasesPackage" value="com.common.core.entity" />
		<!-- 没有把 mapper 文件放到与 dao 相同的深层目录，显式指定 mapper xml 文件位置 -->
		<property name="mapperLocations" value="classpath:/mapper/*Mapper.xml" />
        <!--<property name="mapperLocations" value="classpath:/mappers-mysql/**/*-mapper.xml" />-->
		<property name="configLocation" value="classpath:/mybatis-config.xml"/>
	</bean>

	<!-- 用于 myBatis 的 Mapper 接口扫描 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.common.mapper"/>
		<property name="annotationClass" value="com.common.core.MyBatisRepository"/>
	</bean>

</beans>
